<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:TagTool.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:TagTool.App.Views.UserControls"
    xmlns:vm="clr-namespace:TagTool.App.ViewModels.UserControls"
    x:Class="TagTool.App.Views.UserControls.TaskTriggerView"
    x:DataType="vm:TaskTriggerViewModel"
    d:DesignWidth="800"
    d:DesignHeight="450"
    mc:Ignorable="d"
    >
    <UserControl.Resources>
        <converters:StringToBoolConverter x:Key="IsTriggerTypeScheduleConverter" StringToCompare="{x:Static vm:TriggerType.Schedule}" />
        <converters:StringToBoolConverter x:Key="IsTriggerTypeEventConverter" StringToCompare="{x:Static vm:TriggerType.Event}" />
        <converters:StringToBoolConverter x:Key="IsCustomCronConverter" StringToCompare="Custom" />
        <converters:CronToDescriptionConverter x:Key="CronToDescriptionConverter" />
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Spacing" Value="10" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style Selector="ComboBox">
            <Setter Property="IsEnabled">
                <Binding FallbackValue="True" Path="$parent[views:TaskView].((vm:TaskViewModel)DataContext).IsEditing" />
            </Setter>
        </Style>
        <Style Selector="TextBox">
            <Setter Property="IsEnabled">
                <Binding FallbackValue="True" Path="$parent[views:TaskView].((vm:TaskViewModel)DataContext).IsEditing" />
            </Setter>
        </Style>
    </UserControl.Styles>

    <Design.DataContext>
        <vm:TaskTriggerViewModel />
    </Design.DataContext>

    <StackPanel>
        <ComboBox
            Name="TriggerTypeComboBox"
            MinWidth="105"
            ItemsSource="{Binding TriggerTypes, Mode=OneTime}"
            SelectedItem="{Binding TriggerTypeSelectedItem}"
            />

        <!-- Elements for 'schedule' option -->
        <StackPanel Name="CronInfoStackPanel" IsVisible="{Binding #TriggerTypeComboBox.SelectionBoxItem, Converter={StaticResource IsTriggerTypeScheduleConverter}}">
            <TextBlock
                MinWidth="50"
                VerticalAlignment="Center"
                Text="every:"
                />

            <ComboBox
                Name="CronComboBox"
                MinWidth="125"
                ItemsSource="{Binding PredefinedCronOptions, Mode=OneTime}"
                SelectedItem="{Binding CronPredefineOptionSelectedItem}"
                />

        </StackPanel>
        <!-- Elements for 'custom' option in 'schedule' type trigger -->
        <StackPanel>
            <StackPanel.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="#CronInfoStackPanel.IsVisible" />
                    <Binding Converter="{StaticResource IsCustomCronConverter}" Path="#CronComboBox.SelectionBoxItem" />
                </MultiBinding>
            </StackPanel.IsVisible>
            <TextBlock VerticalAlignment="Center" Text="with Cron:" />
            <TextBox
                Name="CustomCronTextBox"
                Text="{Binding CustomCronText, Mode=TwoWay}"
                Watermark="10-20 5 */3 * *"
                />

            <TextBlock VerticalAlignment="Center" Text="{Binding #CustomCronTextBox.Text, Converter={StaticResource CronToDescriptionConverter}}" />
        </StackPanel>
        <!-- Elements for 'event' option -->
        <StackPanel IsVisible="{Binding #TriggerTypeComboBox.SelectionBoxItem, Converter={StaticResource IsTriggerTypeEventConverter}}">
            <TextBlock
                MinWidth="50"
                VerticalAlignment="Center"
                Text="of type:"
                />

            <ComboBox
                MinWidth="125"
                ItemsSource="{Binding EventTypes, Mode=OneTime}"
                SelectedIndex="0"
                SelectedItem="{Binding EventTypeSelectedItem}"
                />

        </StackPanel>
    </StackPanel>
</UserControl>
