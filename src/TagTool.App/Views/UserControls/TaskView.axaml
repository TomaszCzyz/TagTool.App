<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:TagTool.App.Views.UserControls"
    xmlns:views="clr-namespace:TagTool.App.Core.Views;assembly=TagTool.App.Core"
    xmlns:vm="clr-namespace:TagTool.App.ViewModels.UserControls"
    x:Class="TagTool.App.Views.UserControls.TaskView"
    x:DataType="vm:TaskViewModel"
    Name="TaskViewRoot"
    d:DesignWidth="800"
    d:DesignHeight="650"
    mc:Ignorable="d"
    >
    <UserControl.Styles>
        <Style Selector="ComboBox">
            <Style Selector="^:disabled">
                <Style Selector="^ /template/ Border#Background">
                    <Setter Property="Background" Value="{TemplateBinding Background}" />
                    <Setter Property="BorderBrush" Value="{TemplateBinding BorderBrush}" />
                </Style>
                <Style Selector="^ /template/ ContentControl#ContentPresenter">
                    <Setter Property="Foreground" Value="{TemplateBinding Foreground}" />
                </Style>
                <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                    <Setter Property="Foreground" Value="{TemplateBinding Foreground}" />
                </Style>
            </Style>
        </Style>
        <Style Selector="TextBox">
            <Style Selector="^:disabled">
                <!-- <Setter Property="Foreground" Value="{TemplateBinding Foreground}" /> -->
                <Style Selector="^ /template/ Border#PART_BorderElement">
                    <Setter Property="Background" Value="{TemplateBinding Background}" />
                    <Setter Property="BorderBrush" Value="{TemplateBinding BorderBrush}" />
                </Style>
            </Style>
        </Style>
    </UserControl.Styles>
    <Design.DataContext>
        <vm:TaskViewModel />
    </Design.DataContext>
    <StackPanel
        Margin="5"
        Orientation="Vertical"
        Spacing="10"
        >
        <StackPanel Orientation="Horizontal">
            <TextBlock VerticalAlignment="Center" Text="Task with name " />
            <TextBlock FontWeight="Bold" Text="{Binding TaskId}" />
            <TextBlock VerticalAlignment="Center" Text=" for items:" />
        </StackPanel>
        <!-- todo: disable modification when !IsEditing -->
        <views:TaggableItemsSearchBarView
            Name="SearchBarView"
            DataContext="{Binding SearchBarViewModel, Mode=TwoWay}"
            Focusable="True"
            >
            <views:TaggableItemsSearchBarView.Styles>
                <Style Selector="AutoCompleteBox">
                    <Setter Property="IsEnabled">
                        <Binding FallbackValue="True" Path="#TaskViewRoot.((vm:TaskViewModel)DataContext).IsEditing" />
                    </Setter>
                </Style>
            </views:TaggableItemsSearchBarView.Styles>
        </views:TaggableItemsSearchBarView>
        <TextBlock
            Foreground="Red"
            IsVisible="{Binding TagQueryError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
            Text="{Binding TagQueryError}"
            />
        <TextBlock Text="executed on:" />
        <ItemsControl
            Name="TriggersItemsControl"
            IsVisible="{Binding !!Triggers.Count}"
            ItemsSource="{Binding Triggers}"
            >
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <userControls:TaskTriggerView DataContext="{Binding .}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Button Command="{Binding AddTriggerCommand}" IsVisible="{Binding IsEditing}">
            <avalonia:MaterialIcon Kind="Plus" />
        </Button>
        <TextBlock Text="with job:" />
        <StackPanel Orientation="Horizontal" Spacing="10">
            <ComboBox
                Name="JobComboBox"
                IsEnabled="{Binding IsEditing}"
                ItemsSource="{Binding $parent[userControls:TasksManagerView].((vm:TasksManagerViewModel)DataContext).Jobs, FallbackValue=null}"
                SelectedItem="{Binding SelectedJob, Mode=TwoWay}"
                >
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="vm:JobInfo">
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock VerticalAlignment="Center" Text="{Binding #JobComboBox.((vm:JobInfo)SelectionBoxItem).Description, FallbackValue=''}" />
        </StackPanel>
        <TextBlock
            Foreground="Red"
            IsVisible="{Binding SelectedJobError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
            Text="{Binding SelectedJobError}"
            />
        <TextBlock Text="with arguments:" />
        <TextBox
            Name="JobArgumentsTextBox"
            IsEnabled="{Binding IsEditing}"
            Text="{Binding JobArguments}"
            />
        <TextBlock
            Foreground="Red"
            IsVisible="{Binding JobAttributesError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
            Text="{Binding JobAttributesError}"
            />
        <!-- Edit/Save buttons -->
        <ToggleButton
            Name="SaveEditToggleButton"
            MinHeight="33"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Command="{Binding UpdateTaskCommand}"
            IsChecked="{Binding IsEditing}"
            >
            <Panel>
                <avalonia:MaterialIcon IsVisible="{Binding !#SaveEditToggleButton.IsChecked}" Kind="Edit" />
                <TextBlock IsVisible="{Binding #SaveEditToggleButton.IsChecked}" Text="Save" />
            </Panel>
        </ToggleButton>
    </StackPanel>
</UserControl>
