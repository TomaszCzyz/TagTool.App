<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    xmlns:controls="clr-namespace:TagTool.App.Controls"
    xmlns:converters="clr-namespace:TagTool.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:io="clr-namespace:System.IO;assembly=System.Runtime"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:TagTool.App.ViewModels.UserControls"
    xmlns:viewModels="clr-namespace:TagTool.App.Core.ViewModels;assembly=TagTool.App.Core"
    xmlns:views="clr-namespace:TagTool.App.Core.Views;assembly=TagTool.App.Core"
    x:Class="TagTool.App.Views.UserControls.FileSystemView"
    x:DataType="userControls:FileSystemViewModel"
    x:Name="UserControlRoot"
    d:DesignWidth="800"
    d:DesignHeight="700"
    mc:Ignorable="d"
    Focusable="True"
    >
    <UserControl.Resources>
        <converters:StringToBoolConverter
            x:Key="IsLinuxRootDirConverter"
            StringToCompare="/"
            ValueWhenMatched="False"
            />

    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="Button.Transparent">
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </UserControl.Styles>

    <Design.DataContext>
        <userControls:FileSystemViewModel />
    </Design.DataContext>

    <Grid RowDefinitions="30,*,Auto">
        <!-- Address bar -->
        <Grid Grid.Row="0" ColumnDefinitions="Auto,Auto,Auto,*,Auto">
            <Grid.Styles>
                <Style Selector="Button.NavigationButton">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="1 4" />
                    <Setter Property="Padding" Value="1" />
                    <Setter Property="CornerRadius" Value="6" />

                    <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </Style>
            </Grid.Styles>
            <Button
                Grid.Column="0"
                Classes="NavigationButton"
                Command="{CompiledBinding NavigateBackCommand}"
                IsEnabled="{Binding !CanNavigateBack}"
                >
                <avalonia:MaterialIcon
                    Width="20"
                    Height="20"
                    Foreground="White"
                    Kind="ArrowBack"
                    />

            </Button>
            <Button
                Grid.Column="1"
                Classes="NavigationButton"
                Command="{Binding NavigateForwardCommand}"
                IsEnabled="{Binding !CanNavigateForward}"
                >
                <avalonia:MaterialIcon
                    Width="20"
                    Height="20"
                    Foreground="White"
                    Kind="ArrowForward"
                    />

            </Button>
            <Button
                Grid.Column="2"
                Classes="NavigationButton"
                Command="{Binding NavigateUpCommand}"
                >
                <avalonia:MaterialIcon
                    Width="20"
                    Height="20"
                    Foreground="White"
                    Kind="ArrowUpward"
                    />

            </Button>
            <TextBox
                Name="AddressTextBox"
                Grid.Column="3"
                Margin="5 0 0 0"
                VerticalContentAlignment="Center"
                BorderThickness="0"
                IsVisible="{Binding IsEditing}"
                Text="{Binding AddressTextBox}"
                LostFocus="AddressTextBox_OnLostFocus"
                >
                <TextBox.KeyBindings>
                    <KeyBinding Command="{CompiledBinding CancelAddressChangeCommand}" Gesture="Escape" />
                    <KeyBinding Command="{CompiledBinding CommitAddressCommand}" Gesture="Enter" />
                </TextBox.KeyBindings>
            </TextBox>
            <!-- Interactive address -->
            <DockPanel
                Grid.Column="3"
                Margin="5 0 0 0"
                IsVisible="{Binding !IsEditing}"
                >

                <ItemsControl
                    DockPanel.Dock="Left"
                    HorizontalAlignment="Left"
                    ItemsSource="{Binding AddressSegments}"
                    PropertyChanged="AvaloniaObject_OnPropertyChanged"
                    >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="userControls:AddressSegmentViewModel">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Styles>
                                    <Style Selector="Button.ButtonAddressBar">
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Padding" Value="2,4" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </StackPanel.Styles>
                                <Button
                                    Classes="ButtonAddressBar Transparent"
                                    Command="{Binding NavigateHereCommand}"
                                    Content="{Binding Name}"
                                    IsVisible="{Binding Name, Converter={StaticResource IsLinuxRootDirConverter}}"
                                    />

                                <Button
                                    x:Name="PopupButton"
                                    Classes="ButtonAddressBar Transparent"
                                    Command="{Binding OpenPopupCommand}"
                                    Content="{x:Static io:Path.DirectorySeparatorChar}"
                                    />

                                <Popup
                                    IsLightDismissEnabled="True"
                                    IsOpen="{Binding IsPopupOpen, Mode=TwoWay}"
                                    PlacementTarget="{ReflectionBinding #PopupButton}"
                                    >
                                    <ContextMenu ItemsSource="{Binding Children}">
                                        <ContextMenu.Styles>
                                            <Style Selector="MenuItem">
                                                <Setter Property="Header" Value="{Binding Name}" />
                                                <Setter Property="Command" Value="{Binding NavigateHereCommand}" />
                                                <Setter Property="CommandParameter" Value="{Binding Address}" />
                                            </Style>
                                        </ContextMenu.Styles>
                                    </ContextMenu>
                                </Popup>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Border
                    HorizontalAlignment="Stretch"
                    Background="Transparent"
                    PointerPressed="Border_OnPointerPressed"
                    />

            </DockPanel>
            <Border
                Grid.Column="4"
                Width="{Binding $self.Bounds.Height}"
                BorderBrush="Green"
                BorderThickness="0"
                >
                <Border.Styles>
                    <Style Selector="avalonia|MaterialIcon">
                        <Setter Property="Width" Value="20" />
                        <Setter Property="Height" Value="20" />
                    </Style>
                    <Style Selector="ToggleButton:checked /template/ ContentPresenter#PART_ContentPresenter, ToggleButton:unchecked /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="Black" />
                    </Style>
                    <Style Selector="ToggleButton avalonia|MaterialIcon.tb-checked">
                        <Setter Property="IsVisible" Value="False" />
                    </Style>
                    <Style Selector="ToggleButton:checked avalonia|MaterialIcon.tb-checked">
                        <Setter Property="IsVisible" Value="True" />
                    </Style>
                    <Style Selector="ToggleButton avalonia|MaterialIcon.tb-unchecked">
                        <Setter Property="IsVisible" Value="True" />
                    </Style>
                    <Style Selector="ToggleButton:checked avalonia|MaterialIcon.tb-unchecked">
                        <Setter Property="IsVisible" Value="False" />
                    </Style>
                </Border.Styles>
                <ToggleButton
                    Padding="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsChecked="{Binding AreTagsVisible}"
                    >

                    <Panel>
                        <avalonia:MaterialIcon
                            Classes="tb-checked"
                            IsVisible="{ReflectionBinding !$parent[ToggleButton].IsChecked}"
                            Kind="VisibilityOutline"
                            />

                        <avalonia:MaterialIcon
                            Classes="tb-unchecked"
                            IsVisible="{ReflectionBinding $parent[ToggleButton].IsChecked}"
                            Kind="VisibilityOffOutline"
                            />

                    </Panel>
                </ToggleButton>
            </Border>
        </Grid>
        <!-- Folder content grid -->
        <!-- NOTE: text search for VirtualizingStackPanel is performed only on visible items for standard ListBox -->
        <controls:TextSearchableListBox
            Name="FolderContentListBox"
            Grid.Row="1"
            Background="Transparent"
            Focusable="True"
            FontSize="{DynamicResource AppContentFontSize}"
            IsTextSearchEnabled="True"
            ItemsSource="{Binding Items}"
            SelectedItem="{Binding SelectedItem}"
            SelectionMode="Multiple"
            SelectionChanged="FolderContent_OnSelectionChanged"
            >
            <ListBox.Styles>
                <Style Selector="ListBoxItem">
                    <Setter Property="Padding" Value="2" />
                    <Setter x:DataType="viewModels:TaggableItemViewModel" Property="TextSearch.Text">
                        <ReflectionBinding Path="DisplayName" />
                    </Setter>
                </Style>
            </ListBox.Styles>
            <ListBox.DataTemplates>
                <DataTemplate x:CompileBindings="False" DataType="viewModels:TaggableItemViewModel">
                    <views:TaggableItemView FontSize="14" AttachedToVisualTree="Visual_OnAttachedToVisualTree" />
                </DataTemplate>
            </ListBox.DataTemplates>
        </controls:TextSearchableListBox>
        <!-- QuickSearch text field -->
        <Border
            Grid.Row="1"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Background="Orange"
            CornerRadius="4"
            IsVisible="{Binding #FuzzySearchTextBlock.Text, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
            Opacity="0.7"
            >

            <DockPanel>
                <avalonia:MaterialIcon
                    DockPanel.Dock="Left"
                    Margin="4 0 0 0"
                    Kind="Search"
                    />

                <TextBlock Name="FuzzySearchTextBlock" Padding="4" />
            </DockPanel>
        </Border>
        <!-- Footer -->
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <TextBlock
                Margin="5 2 0 0"
                FontSize="12"
                Text="{Binding Items.Count, StringFormat=\{0\} items |}"
                />

            <TextBlock
                Name="TextBlockSelectedItems"
                Margin="5 2 0 0"
                FontSize="12"
                Text=""
                />

        </StackPanel>
        <ProgressBar
            Grid.Row="2"
            IsIndeterminate="True"
            IsVisible="False"
            />

    </Grid>
</UserControl>
