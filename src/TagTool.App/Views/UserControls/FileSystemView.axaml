<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:TagTool.App.ViewModels.UserControls"
    xmlns:converters="clr-namespace:TagTool.App.Converters"
    xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    xmlns:userControls1="clr-namespace:TagTool.App.Views.UserControls"
    xmlns:comparers="clr-namespace:TagTool.App.Comparers"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="700"
    x:Name="UserControlRoot"
    x:Class="TagTool.App.Views.UserControls.FileSystemView"
    x:DataType="userControls:FileSystemViewModel">

    <UserControl.Resources>
        <converters:FileSizeToStringConverter x:Key="FileSizeToStringConverter" />
        <converters:BoolToBrushConverter x:Key="BoolToBrushConverter" />
        <comparers:TaggableItemViewModelComparer x:Key="TaggableItemViewModelComparer" />
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="Button.Transparent">
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </UserControl.Styles>

    <Design.DataContext>
        <userControls:FileSystemViewModel />
    </Design.DataContext>

    <Grid RowDefinitions="30,*,Auto">

        <!-- Address bar -->
        <Grid Grid.Row="0" ColumnDefinitions="Auto,Auto,Auto,*,Auto">
            <Grid.Styles>
                <Style Selector="Button.NavigationButton">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="1 4" />
                    <Setter Property="Padding" Value="1" />
                    <Setter Property="CornerRadius" Value="6" />

                    <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </Style>
            </Grid.Styles>
            <Button
                Grid.Column="0"
                Classes="NavigationButton"
                Command="{CompiledBinding NavigateBackCommand}">

                <Svg Path="/Assets/Svgs/Light/arrow_back.svg" />
            </Button>

            <Button
                Grid.Column="1"
                Classes="NavigationButton"
                Command="{Binding NavigateForwardCommand}">

                <Svg Path="/Assets/Svgs/Light/arrow_forward.svg" />
            </Button>

            <Button
                Grid.Column="2"
                Classes="NavigationButton"
                Command="{Binding NavigateUpCommand}">

                <Svg Path="/Assets/Svgs/Light/arrow_upward.svg" />
            </Button>

            <TextBox
                Grid.Column="3"
                Name="AddressTextBox"
                Margin="5 0 0 0"
                BorderThickness="0"
                VerticalContentAlignment="Center"
                IsVisible="{Binding IsEditing}"
                Text="{Binding AddressTextBox}"
                LostFocus="AddressTextBox_OnLostFocus">
                <TextBox.KeyBindings>
                    <KeyBinding Gesture="Escape" Command="{CompiledBinding CancelAddressChangeCommand}" />
                    <KeyBinding Gesture="Enter" Command="{CompiledBinding CommitAddressCommand}" />
                </TextBox.KeyBindings>
            </TextBox>

            <!-- Interactive address -->
            <DockPanel
                Grid.Column="3"
                Margin="5 0 0 0"
                IsVisible="{Binding !IsEditing}">

                <ItemsControl
                    DockPanel.Dock="Left"
                    HorizontalAlignment="Left"
                    Items="{Binding AddressSegments}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="userControls:AddressSegmentViewModel">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Styles>
                                    <Style Selector="Button.ButtonAddressBar">
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Padding" Value="2,4" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </StackPanel.Styles>
                                <Button
                                    Classes="ButtonAddressBar Transparent"
                                    Content="{Binding Name}"
                                    Command="{Binding NavigateHereCommand}" />

                                <Button
                                    x:Name="PopupButton"
                                    Classes="ButtonAddressBar Transparent"
                                    Content="»"
                                    Command="{Binding OpenPopupCommand}" />

                                <Popup
                                    IsLightDismissEnabled="True"
                                    PlacementTarget="{ReflectionBinding #PopupButton}"
                                    IsOpen="{Binding IsPopupOpen, Mode=TwoWay}">
                                    <ContextMenu Items="{Binding Children}">
                                        <ContextMenu.Styles>
                                            <Style Selector="MenuItem">
                                                <Setter Property="Header" Value="{Binding Name}" />
                                                <Setter Property="Command" Value="{Binding NavigateHereCommand}" />
                                                <Setter Property="CommandParameter" Value="{Binding Address}" />
                                            </Style>
                                        </ContextMenu.Styles>
                                    </ContextMenu>
                                </Popup>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Border
                    Background="Transparent"
                    HorizontalAlignment="Stretch"
                    PointerPressed="Border_OnPointerPressed" />

            </DockPanel>

            <Border
                Grid.Column="4"
                BorderBrush="Green"
                BorderThickness="0"
                Width="{Binding $self.Bounds.Height}">
                <Border.Styles>
                    <Style Selector="avalonia|MaterialIcon">
                        <Setter Property="Width" Value="20" />
                        <Setter Property="Height" Value="20" />
                    </Style>
                    <Style
                        Selector="
                            ToggleButton:checked /template/ ContentPresenter#PART_ContentPresenter,
                            ToggleButton:unchecked /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="Black" />
                    </Style>
                    <Style Selector="ToggleButton avalonia|MaterialIcon.tb-checked">
                        <Setter Property="IsVisible" Value="False" />
                    </Style>
                    <Style Selector="ToggleButton:checked avalonia|MaterialIcon.tb-checked">
                        <Setter Property="IsVisible" Value="True" />
                    </Style>
                    <Style Selector="ToggleButton avalonia|MaterialIcon.tb-unchecked">
                        <Setter Property="IsVisible" Value="True" />
                    </Style>
                    <Style Selector="ToggleButton:checked avalonia|MaterialIcon.tb-unchecked">
                        <Setter Property="IsVisible" Value="False" />
                    </Style>
                </Border.Styles>

                <ToggleButton
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Padding="0"
                    IsChecked="False"
                    Command="{Binding ChangeTagsVisibilityCommand}">

                    <Panel>
                        <avalonia:MaterialIcon
                            Classes="tb-checked"
                            Kind="VisibilityOutline"
                            IsVisible="{Binding !$parent[ToggleButton].IsChecked}" />

                        <avalonia:MaterialIcon
                            Classes="tb-unchecked"
                            Kind="VisibilityOffOutline"
                            IsVisible="{Binding $parent[ToggleButton].IsChecked}" />

                    </Panel>
                </ToggleButton>
            </Border>
        </Grid>

        <!-- File system data grid -->
        <DataGrid
            Grid.Row="1"
            Name="DataGrid"
            FontFamily="avares://TagTool.App/Assets/Fonts#Lato"
            SelectionMode="Extended"
            CanUserResizeColumns="True"
            CanUserReorderColumns="True"
            CanUserSortColumns="True"
            SelectedItem="{Binding SelectedItem}"
            Items="{Binding Items}"
            LostFocus="DataGrid_OnLostFocus"
            SelectionChanged="DataGrid_OnSelectionChanged">
            <DataGrid.KeyBindings>
                <KeyBinding Gesture="Enter" Command="{CompiledBinding NavigateCommand}" />
            </DataGrid.KeyBindings>
            <DataGrid.Columns>
                <DataGridTemplateColumn
                    Header="Name"
                    IsReadOnly="True"
                    CanUserSort="True"
                    Width="*"
                    CustomSortComparer="{StaticResource TaggableItemViewModelComparer}">
                    <DataTemplate DataType="userControls:TaggableItemViewModel">
                        <userControls1:TaggableItemView AttachedToVisualTree="Visual_OnAttachedToVisualTree"/>
                    </DataTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Header="Date Created"
                    IsReadOnly="True"
                    CanUserSort="True"
                    Width="Auto">
                    <DataTemplate DataType="userControls:TaggableItemViewModel">
                        <TextBlock
                            TextAlignment="Left"
                            VerticalAlignment="Center"
                            Text="{Binding DateCreated, StringFormat=\{0:yyyy/MM/dd hh:mm:ss\}}" />

                    </DataTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Header="Size"
                    IsReadOnly="True">
                    <DataTemplate DataType="userControls:TaggableItemViewModel">
                        <TextBlock
                            TextAlignment="Right"
                            VerticalAlignment="Center"
                            Text="{Binding Size, Converter={StaticResource FileSizeToStringConverter}}" />

                    </DataTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- QuickSearch text field -->
        <Border
            Grid.Row="1"
            Name="QuickSearchBorder"
            Opacity="0.7"
            Background="Orange"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            CornerRadius="4"
            IsVisible="{Binding QuickSearchText, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">

            <DockPanel>
                <avalonia:MaterialIcon
                    DockPanel.Dock="Left"
                    Kind="Search"
                    Margin="4 0 0 0" />

                <TextBlock
                    Name="QuickSearchTextBlock"
                    Padding="4"
                    Text="{Binding QuickSearchText, Mode=TwoWay}"
                    Foreground="{Binding HasQuickSearchResults, Mode=OneWay,  Converter={StaticResource BoolToBrushConverter}}" />

            </DockPanel>
        </Border>

        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <TextBlock
                Margin="5 2 0 0 "
                FontSize="12"
                Text="{Binding Items.Count, StringFormat=\{0\} items |}" />

            <TextBlock
                Name="TextBlockSelectedItems"
                Margin="5 2 0 0 "
                FontSize="12"
                Text="" />

        </StackPanel>
        <ProgressBar
            Grid.Row="2"
            IsIndeterminate="True"
            IsVisible="False" />

    </Grid>
</UserControl>
