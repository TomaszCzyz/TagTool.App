<Window
    Background="{StaticResource MyLightPrimary200}"
    ExtendClientAreaChromeHints="Default"
    ExtendClientAreaTitleBarHeightHint="-1"
    ExtendClientAreaToDecorationsHint="True"
    Icon="/Assets/avalonia-logo.ico"
    Title="TagTool.App"
    d:DesignHeight="700"
    d:DesignWidth="1400"
    x:Class="TagTool.App.Views.MainWindow"
    x:CompileBindings="True"
    x:Name="RootWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:userControls="clr-namespace:TagTool.App.Views.UserControls"
    xmlns:vm="using:TagTool.App.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Window.KeyBindings>
        <KeyBinding
            Command="{ReflectionBinding ResetFocusCommand}"
            CommandParameter="{Binding #RootWindow}"
            Gesture="Escape"/>
        <KeyBinding
            Command="{ReflectionBinding FocusNextSearchTabCommand}"
            CommandParameter="{Binding #RootWindow}"
            Gesture="Ctrl+Q"/>
    </Window.KeyBindings>
    <Window.Styles>
        <Style Selector="Border.MenuPanel">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <SolidColorBrush Color="{StaticResource MyLightPrimary800}" Opacity="0.3"/>
            </Setter>
            <Setter Property="Background" Value="{StaticResource MyLightPrimary300}"/>
        </Style>
        <Style Selector="RadioButton.SideMenu">
            <Setter Property="Template">
                <ControlTemplate x:CompileBindings="False">
                    <ToggleButton
                        Background="Transparent"
                        Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        DataContext="{Binding $parent}"
                        IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Padding="3"/>

                </ControlTemplate>
            </Setter>
        </Style>
    </Window.Styles>

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Grid ColumnDefinitions="*" RowDefinitions="Auto,*">

        <!-- Top menu -->
        <Border
            Classes="MenuPanel"
            Grid.Row="0"
            Margin="-1 -1 -1 0"
            PointerMoved="InputElement_OnPointerMoved"
            PointerPressed="InputElement_OnPointerPressed"
            PointerReleased="InputElement_OnPointerReleased">

            <userControls:MenuView/>
        </Border>

        <!-- Left tool menu -->
        <Border Grid.Row="1">
            <Border.Styles>
                <Style Selector="DocumentTabStrip /template/ Button#PART_ButtonCreate">
                    <Setter Property="Template">
                        <ControlTemplate>
                            <ToggleButton CornerRadius="0">
                                <Panel Margin="0">
                                    <avalonia:MaterialIcon
                                        Height="20"
                                        Kind="Plus"
                                        Padding="0"
                                        Width="20"/>

                                    <Popup
                                        IsLightDismissEnabled="True"
                                        IsOpen="{Binding $parent[ToggleButton].IsChecked, Mode=TwoWay}"
                                        PlacementTarget="{Binding $parent[ToggleButton]}">

                                        <Border
                                            BorderThickness="1"
                                            Margin="0"
                                            Padding="0">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="Black" Opacity="0.3"/>
                                            </Border.BorderBrush>
                                            <Border.Styles>
                                                <Style Selector="ListBoxItem">
                                                    <Setter Property="Padding" Value="0"/>
                                                </Style>
                                            </Border.Styles>

                                            <ListBox Items="{ReflectionBinding ElementName=RootWindow, Path=DataContext.Tools, FallbackValue=null}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate x:CompileBindings="False">
                                                        <Button
                                                            Click="Button_OnClick"
                                                            Command="{Binding ElementName=RootWindow, Path=DataContext.AddDocumentToDockCommand, FallbackValue=null}"
                                                            CommandParameter="{Binding .}"
                                                            HorizontalAlignment="Stretch"
                                                            Margin="0"
                                                            Padding="0">

                                                            <TextBlock Text="{Binding .}"/>
                                                        </Button>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Border>
                                    </Popup>
                                </Panel>
                            </ToggleButton>
                        </ControlTemplate>
                    </Setter>
                </Style>
            </Border.Styles>

            <DockControl Layout="{ReflectionBinding Layout}"/>
        </Border>
    </Grid>
</Window>
