<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    xmlns:converters="clr-namespace:TagTool.App.Core.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dataTemplates="clr-namespace:TagTool.App.Core.DataTemplates"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:TagTool.App.Core.Models"
    xmlns:viewModels="clr-namespace:TagTool.App.Core.ViewModels"
    x:Class="TagTool.App.Core.Views.TaggableItemsSearchBarView"
    x:DataType="viewModels:TaggableItemsSearchBarViewModel"
    x:Name="UserControlRoot"
    d:DesignWidth="800"
    d:DesignHeight="450"
    mc:Ignorable="d"
    Focusable="True"
    GotFocus="InputElement_OnGotFocus"
    >
    <UserControl.Resources>
        <converters:DoubleRangeConverter
            x:Key="DoubleRangeConverter"
            InputMax="1.0"
            InputMin="0.5"
            OutputMax="1.0"
            OutputMin="0.0"
            />
        <converters:TextDecorationsConverter x:Key="TextDecorationsConverter" />
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="ToggleButton.TransparentBackgroundWhenChecked:checked">
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="Transparent" />
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}" />
            </Style>
        </Style>
        <!-- <Style Selector="Border.SearchBox"> -->
        <!--     <Setter Property="BorderBrush"> -->
        <!--         <SolidColorBrush Opacity="0.5" Color="{DynamicResource Secondary}" /> -->
        <!--     </Setter> -->
        <!-- </Style> -->
        <!-- <Style Selector="Border.SearchBox:pointerover, Border.SearchBox:focus-within"> -->
        <!--     <Setter Property="BorderBrush"> -->
        <!--         <SolidColorBrush Opacity="1" Color="{StaticResource MyLightSecondary500}" /> -->
        <!--     </Setter> -->
        <!-- </Style> -->
    </UserControl.Styles>
    <Design.DataContext>
        <viewModels:TaggableItemsSearchBarViewModel />
    </Design.DataContext>
    <!-- Search Bar -->
    <Border
        Name="SearchBarBorder"
        Classes="SearchBox"
        VerticalAlignment="Top"
        Background="Transparent"
        BorderThickness="1 1 1 2"
        ClipToBounds="True"
        CornerRadius="4"
        PointerPressed="SearchBarBorder_OnPointerPressed"
        >
        <Border.Transitions>
            <Transitions>
                <BrushTransition Property="BorderBrush" Duration="0:0:0.2" />
            </Transitions>
        </Border.Transitions>
        <Grid
            Name="SearchBarGrid"
            VerticalAlignment="Top"
            ColumnDefinitions="Auto,*,Auto,Auto"
            RowDefinitions="Auto"
            >
            <Grid.KeyBindings>
                <KeyBinding Command="{ReflectionBinding CommitSearchCommand}" Gesture="Ctrl+Enter" />
            </Grid.KeyBindings>
            <Grid.Styles>
                <Style Selector="ListBox">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="ItemsPanel">
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </Setter>
                </Style>
                <Style Selector="ListBoxItem">
                    <Setter Property="Transitions">
                        <Transitions>
                            <DoubleTransition Property="Opacity" Duration="0:0:0.2" />
                        </Transitions>
                    </Setter>
                    <Setter Property="Padding" Value="2 4 0 0" />
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Opacity" Value="0.5" />
                    <Setter Property="MaxHeight" Value="30" />
                    <Style Selector="^:pointerover">
                        <Setter Property="Opacity" Value="1" />
                    </Style>
                    <Style Selector="^:selected">
                        <Setter Property="Opacity" Value="1" />
                    </Style>
                    <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter, ^:selected /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </Style>
                <Style Selector="TextBox.Transparent">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                    <!-- pointerover -->
                    <Style Selector="^:pointerover, ^:focus-within, ^:focus">
                        <Style Selector="^ /template/ Border#PART_BorderElement">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </Style>
                </Style>
                <Style Selector="Button.Transparent">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </Grid.Styles>
            <Button
                Grid.Column="0"
                Margin="10 0 -2 0"
                Padding="0"
                Background="Transparent"
                Command="{ReflectionBinding CommitSearchCommand}"
                >
                <avalonia:MaterialIcon
                    Width="20"
                    Height="20"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource Primary}"
                    Kind="Magnify"
                    />
            </Button>
            <!-- SearchBar's query -->
            <ScrollViewer
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                >
                <!-- Query box -->
                <ListBox
                    Name="TagsListBox"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                    Margin="2"
                    Padding="4"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Focusable="True"
                    ItemsSource="{Binding DisplayedSearchBarElements}"
                    SelectedItem="{Binding SelectedItem}"
                    SelectionMode="Single"
                    KeyDown="TagsListBox_OnKeyDown"
                    >
                    <ListBox.DataTemplates>
                        <DataTemplate x:CompileBindings="False" DataType="models:QuerySegment">
                            <Grid ColumnDefinitions="Auto,Auto" RowDefinitions="Auto">
                                <ContentControl
                                    Grid.Column="0"
                                    Content="{Binding Tag}"
                                    ContentTemplate="{x:Static dataTemplates:TagsTemplateProvider.TagDataTemplate}"
                                    Loaded="TagDisplayText_OnAttachedToLogicalTree"
                                    >
                                    <ContentControl.ContextFlyout>
                                        <MenuFlyout Closed="PopupFlyoutBase_OnClosing">
                                            <MenuItem
                                                Command="{ReflectionBinding #UserControlRoot.((viewModels:TaggableItemsSearchBarViewModel)DataContext).UpdateQuerySegmentStateCommand, FallbackValue=null}"
                                                CommandParameter="{x:Static models:QuerySegmentState.Include}"
                                                Header="Include"
                                                />
                                            <MenuItem
                                                Command="{ReflectionBinding #UserControlRoot.((viewModels:TaggableItemsSearchBarViewModel)DataContext).UpdateQuerySegmentStateCommand, FallbackValue=null}"
                                                CommandParameter="{x:Static models:QuerySegmentState.Exclude}"
                                                Header="Exclude"
                                                />
                                            <MenuItem
                                                Command="{ReflectionBinding #UserControlRoot.((viewModels:TaggableItemsSearchBarViewModel)DataContext).UpdateQuerySegmentStateCommand, FallbackValue=null}"
                                                CommandParameter="{x:Static models:QuerySegmentState.MustBePresent}"
                                                Header="MustBePresent"
                                                />
                                        </MenuFlyout>
                                    </ContentControl.ContextFlyout>
                                    <ContentControl.Styles>
                                        <Style Selector="TextBlock">
                                            <Setter x:DataType="models:Tag" Property="Text">
                                                <Binding Path="Text" />
                                            </Setter>
                                            <Setter Property="TextDecorations">
                                                <Binding
                                                    Converter="{StaticResource TextDecorationsConverter}"
                                                    FallbackValue="null"
                                                    Path="$parent[Grid].((models:QuerySegment)DataContext).State"
                                                    />
                                            </Setter>
                                            <Setter Property="Margin" Value="4 1" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="FontSize" Value="18" />
                                        </Style>
                                    </ContentControl.Styles>
                                </ContentControl>
                                <Button
                                    Grid.Column="1"
                                    Classes="Transparent"
                                    Width="14"
                                    Height="14"
                                    Margin="-4 2 0 2"
                                    Padding="0"
                                    VerticalAlignment="Top"
                                    Command="{ReflectionBinding #UserControlRoot.((viewModels:TaggableItemsSearchBarViewModel)DataContext).RemoveTagFromSearchQueryCommand, FallbackValue=null}"
                                    CommandParameter="{Binding .}"
                                    CornerRadius="100"
                                    Opacity="{Binding $parent[ListBoxItem].Opacity, Converter={StaticResource DoubleRangeConverter}}"
                                    >
                                    <avalonia:MaterialIcon
                                        Width="{Binding $parent.Width}"
                                        Height="{Binding $parent.Height}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource Primary}"
                                        Kind="Close"
                                        />
                                </Button>
                            </Grid>
                        </DataTemplate>
                        <DataTemplate x:CompileBindings="False" DataType="models:TextBoxMarker">
                            <AutoCompleteBox
                                Background="Transparent"
                                BorderThickness="0"
                                FilterMode="None"
                                IsTextCompletionEnabled="True"
                                MinimumPrefixLength="0"
                                Watermark="Next Tag..."
                                AttachedToLogicalTree="AutoCompleteBox_OnAttachedToVisualTree"
                                Loaded="AutoCompleteBox_OnLoaded"
                                >
                                <AutoCompleteBox.Styles>
                                    <Style Selector="ListBox">
                                        <Setter Property="ItemsPanel">
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical" />
                                            </ItemsPanelTemplate>
                                        </Setter>
                                    </Style>
                                    <Style Selector="TextBox">
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <!-- pointerover -->
                                        <Style Selector="^:pointerover, ^:focus-within, ^:focus">
                                            <Style Selector="^ /template/ Border#PART_BorderElement">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0" />
                                            </Style>
                                        </Style>
                                    </Style>
                                    <Style Selector="Popup">
                                        <Setter Property="Placement" Value="BottomEdgeAlignedLeft" />
                                    </Style>
                                </AutoCompleteBox.Styles>
                            </AutoCompleteBox>
                        </DataTemplate>
                    </ListBox.DataTemplates>
                </ListBox>
            </ScrollViewer>
        </Grid>
    </Border>
</UserControl>
