<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:TagTool.App.ViewModels.UserControls"
    xmlns:converters="clr-namespace:TagTool.App.Converters"
    xmlns:models="clr-namespace:TagTool.App.Core.Models;assembly=TagTool.App.Core"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
    x:Name="Root"
    x:Class="TagTool.App.Views.UserControls.FileSystemView"
    x:DataType="userControls:FileSystemViewModel">

    <UserControl.Resources>
        <converters:FileSizeToStringConverter x:Key="FileSizeToStringConverter" />
        <converters:IconToBitmapConverter x:Key="IconToBitmapConverter" />
        <models:FileSystemEntryComparer x:Key="FileSystemEntryComparer" />
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="Button.Transparent">
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </UserControl.Styles>

    <Design.DataContext>
        <userControls:FileSystemViewModel />
    </Design.DataContext>

    <Grid RowDefinitions="30,*">

        <!-- Address bar -->
        <Grid Grid.Row="0" ColumnDefinitions="Auto,Auto,Auto,*">
            <Grid.Styles>
                <Style Selector="Button.NavigationButton">
                    <Setter Property="Background" Value="#464646" />
                    <Setter Property="Margin" Value="1 4" />
                    <Setter Property="Padding" Value="1" />
                    <Setter Property="CornerRadius" Value="6" />
                </Style>
            </Grid.Styles>
            <Button
                Grid.Column="0"
                Classes="NavigationButton"
                Command="{Binding NavigateBackCommand}">

                <Svg Path="/Assets/Svgs/arrow_back_black_24dp.svg" />
            </Button>

            <Button
                Grid.Column="1"
                Classes="NavigationButton"
                Command="{Binding NavigateForwardCommand}">

                <Svg Path="/Assets/Svgs/arrow_forward_black_24dp.svg" />
            </Button>

            <Button
                Grid.Column="2"
                Classes="NavigationButton"
                Command="{Binding NavigateUpCommand}">

                <Svg Path="/Assets/Svgs/arrow_upward_black_24dp.svg" />
            </Button>

            <TextBox
                Grid.Column="3"
                Name="AddressTextBox"
                Margin="5 0 0 0"
                BorderThickness="0"
                VerticalContentAlignment="Center"
                IsVisible="{Binding IsEditing}"
                Text="{Binding TextBoxAddress}"
                LostFocus="AddressTextBox_OnLostFocus">
                <TextBox.KeyBindings>
                    <KeyBinding Gesture="Escape" Command="{CompiledBinding CancelNavigationCommand}" />
                    <KeyBinding Gesture="Enter" Command="{CompiledBinding CommitNavigationCommand}" />
                </TextBox.KeyBindings>
            </TextBox>

            <DockPanel
                Grid.Column="3"
                Margin="5 0 0 0"
                IsVisible="{Binding !IsEditing}">

                <Border
                    Background="Transparent"
                    HorizontalAlignment="Stretch"
                    PointerPressed="Border_OnPointerPressed" />

                <ItemsControl
                    DockPanel.Dock="Left"
                    HorizontalAlignment="Left"
                    Items="{Binding AddressSegments}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="userControls:AddressSegmentViewModel">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Styles>
                                    <Style Selector="Button.ButtonAddressBar">
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Padding" Value="2,4" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </StackPanel.Styles>
                                <Button
                                    Classes="ButtonAddressBar Transparent"
                                    Content="{Binding Name}"
                                    Command="{ReflectionBinding #Root.DataContext.ChangeAddressCommand}"
                                    CommandParameter="{Binding Address}" />

                                <Button
                                    x:Name="PopupButton"
                                    Classes="ButtonAddressBar Transparent"
                                    Content="»"
                                    Command="{Binding OpenPopupCommand}" />

                                <Popup
                                    IsLightDismissEnabled="True"
                                    PlacementTarget="{ReflectionBinding #PopupButton}"
                                    IsOpen="{Binding IsPopupOpen, Mode=TwoWay}">
                                    <ContextMenu Items="{Binding Children}">
                                        <ContextMenu.Styles>
                                            <Style Selector="MenuItem">
                                                <Setter Property="Header" Value="{Binding Name}" />
                                                <Setter Property="Command" Value="{ReflectionBinding #Root.DataContext.ChangeAddressCommand}" />
                                                <Setter Property="CommandParameter" Value="{Binding Address}" />
                                            </Style>
                                        </ContextMenu.Styles>
                                    </ContextMenu>
                                </Popup>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </Grid>

        <!-- File system data grid -->
        <DataGrid
            Grid.Row="1"
            FontFamily="avares://TagTool.App/Assets/Fonts#JetBrains"
            SelectionMode="Extended"
            CanUserResizeColumns="True"
            CanUserReorderColumns="True"
            CanUserSortColumns="True"
            SelectedItem="{Binding SelectedItem}"
            Items="{Binding Items}"
            DoubleTapped="DataGrid_OnDoubleTapped">
            <DataGrid.KeyBindings>
                <KeyBinding Gesture="Enter" Command="{CompiledBinding OpenItemCommand}" />
                <KeyBinding Gesture="Back" Command="{CompiledBinding NavigateUpCommand}" />
            </DataGrid.KeyBindings>
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Width="60" Header="✔" CanUserResize="False" />

                <!-- todo: sorting does not work, probably comparer has to be specified explicitly -->
                <DataGridTemplateColumn
                    Header="Name"
                    IsReadOnly="True"
                    CanUserSort="True"
                    Width="*"
                    CustomSortComparer="{StaticResource FileSystemEntryComparer}">

                    <DataTemplate DataType="models:FileSystemEntry">
                        <Grid ColumnDefinitions="25,*">
                            <Image
                                Grid.Column="0"
                                Margin="0 0 2 0"
                                Source="{Binding FullName, Converter={StaticResource IconToBitmapConverter}, ConverterParameter=25}" />

                            <TextBlock
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Stretch"
                                Text="{Binding Name}" />

                        </Grid>
                    </DataTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    Header="Date Created"
                    IsReadOnly="True"
                    Binding="{Binding DateCreated, StringFormat=\{0:yyyy/MM/dd hh:mm:ss\}}" />

                <DataGridTextColumn
                    Header="Date Modified"
                    IsReadOnly="True"
                    Binding="{Binding ModifiedDate, StringFormat=\{0:yyyy/MM/dd hh:mm:ss\}}" />

                <DataGridTemplateColumn
                    Header="Size"
                    IsReadOnly="True">
                    <DataTemplate DataType="models:FileSystemEntry">
                        <TextBlock
                            TextAlignment="Right"
                            VerticalAlignment="Center"
                            Text="{Binding Length, Converter={StaticResource FileSizeToStringConverter}}" />

                    </DataTemplate>

                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
